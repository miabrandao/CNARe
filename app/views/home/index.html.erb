<head>

<style>

div.tooltip {   
  position: absolute;           
  text-align: center;           
  width: auto;                  
  height: auto;                 
  padding: 2px;             
  font: 12px sans-serif;        
  background: lightsteelblue;   
  border: 0px;      
  border-radius: 8px;           
  pointer-events: none;         
}

#update_button {
  width: 7.7em;  height: 2em;
  right: -435px;
  top: 10px;
  position: relative;
}

#form_update {
  height: 0px;
  position: absolute;
}

#form_create {
  height: 0px;
}

image#search_image {
  float: left;
}

input#search {
  float: left;
  border-radius: 25px;
}
 
select#select_algorithms {
  right: -765px;
  top: -16px;
  position: relative;
}

#label {
  top: 580px;
  position: absolute;
  left: 60px;
  border: solid 1px #ccc;
  float: left;
  border-radius: 5px;
}

.alert-danger,
.alert-error {
color: #b94a48;
background-color: #f2dede;
border-color: #eed3d7;
}

table#table_width {
  float: left;
  width: 600px; 
  top: -20px;
  position: relative;
  right: -50px;
}

svg {
    background-color: white; 
    float:left;
    border: solid 1px #ccc;
    border-radius: 5px;
}

.node circle {
    stroke: #fff;
    stroke-width: 1.5px; 
    fill: #1f77b4;
}
.node text {
    font: bold 12px sans-serif;
    fill: darkblue;
    text-shadow: 0 1px 0 #000000;
}
.link {
    stroke: #999;
    stroke-opacity: .6;
}

.modal-backdrop, .modal-backdrop.fade.in {
  position: static;
  display: none;
}

#dl_link {
      top: 380px;
      left: -75px;
      position: relative;
      border: solid 1px #CCC;
      border-radius: 5px;
      background-color: #0058CC;
      padding: 6px;
      color: #FFF;
      font-family: sans-serif;
      font-size: 12px;
      text-decoration: none;
    }
    #dl_link:hover {
      background-color: #004CCC;
    }

</style>
    <%= form_tag({:controller => "home", :action => "create", :method => "get"}, {:id => 'form_create'}) do %>
      <% if @nome == ""%>
        <%= text_field_tag :search, params[:search], options = {:size => "200", :placeholder => "Search", :class => "round shadow"} %>&nbsp;
      <% else %>
        <%= text_field_tag :search, params[:search], options = {:size => "200", :placeholder => @nome, :class => "round shadow"} %>&nbsp;
      <% end %>
      <%= image_submit_tag("search.png", :id => "search_image", :title => "Search") %>
      <% if @researchers and @researchers != ""%>
        <%= link_to image_tag('edit.png', title: 'Edit '+' informations'), {:controller => 'home', :action => 'edit', :researcher_id => @researchers[0]} %>
      <% end %>
    <% end %>

    <% if @researchers and @researchers != [] %> 
      <%= form_tag({:controller => "home", :action => "compare", :method => "get"}, {:id => 'form_select'}) do %>
        <%= select_tag 'select_algorithms', options_for_select([['MVCWalker and Affin', '1'], ['MVCWalker and CORALS', '2'], ['Affin and CORALS', '3']], :selected=>@compare), prompt: "Compare two algorithms", :onchange=>"submit();" %>
      <% end %>
    <% end %>

</head>

<% if @researchers != [] && @researchers %>

<div allign="left"><%= image_tag("label1.png", :id => "label") %></div>

<div id="graph_d"></div>

<%= form_tag({:action => 'update_network'}, {:id => 'form_update'}) do %>
  <input id="update_button" name="index_update" type="submit" value="Update" class="btn-primary">
<% end %>

<a id="dl_link" href="#" download="canvas.png">Download</a>

<script id = "graph_s">

var div = d3.select("body").append("div")   
    .attr("class", "tooltip")               
    .style("opacity", 0);

var multiplier = 2;

var color = d3.scale.category10();

var width = 550,
    height = 420

var svg = d3.select("div#graph_d").append("svg")
    .attr("width", width)
    .attr("height", height);

var force = d3.layout.force()
    .gravity(.05)
    .distance(175)
    .charge(-700)
    .size([width, height]);

d3.json("http://localhost:3000/home/index.json", function(error, json) {
  var node_drag = d3.behavior.drag()
    .on("dragstart", dragstart)
    .on("drag", dragmove)
    .on("dragend", dragend);  

  var edges = [];
    json.Links.forEach(function(e) { 
    var sourceNode = json.Nodes.filter(function(n) { return n.id === e.source; })[0],
    targetNode = json.Nodes.filter(function(n) { return n.id === e.target; })[0];
    	
    edges.push({source: sourceNode, target: targetNode, value: e.value, count: e.count});
    });

    
function dragstart(d, i) {
    force.stop() // stops the force auto positioning before you start dragging
}

function dragmove(d, i) {
    d.px += d3.event.dx;
    d.py += d3.event.dy;
    d.x += d3.event.dx;
    d.y += d3.event.dy; 
    tick(); // this is the key to make it work together with updating both px,py,x,y on d !
}

function dragend(d, i) {
    d.fixed = true; // of course set the node to fixed so the force doesn't include the node in its auto positioning stuff
    tick();
    force.resume();
}

  force
      .nodes(json.Nodes)
      .links(edges)
      .start();

  var link = svg.selectAll(".link")
      .data(edges)
    .enter().append("line")
      .attr("class", "link")
      .style("stroke-width", function(e) { return e.value*multiplier})
      .on("mouseover", function(e) {      
          div.transition()        
             .duration(200)      
             .style("opacity", .9);      
          div .html("Number of publications: "  + e.count)  
              .style("left", (d3.event.pageX) + "px")     
              .style("top", (d3.event.pageY - 28) + "px");    
          })                  
      .on("mouseout", function(e) {       
          div.transition()        
              .duration(500)      
              .style("opacity", 0);   
      });

  var node = svg.selectAll(".node")
      .data(json.Nodes)
    .enter().append("g")
      .attr("class", "node")
      .style("fill", function(d) { return color(d.group); })
      .call(node_drag)
      .on("mouseover", function(d) {      
          div.transition()        
             .duration(200)      
             .style("opacity", .9);      
          div .html("Institution: "  + d.instituicao)  
              .style("left", (d3.event.pageX) + "px")     
              .style("top", (d3.event.pageY - 28) + "px");    
          })                  
      .on("mouseout", function(d) {       
          div.transition()        
              .duration(500)      
              .style("opacity", 0);   
      });

  node.append("circle")
      .attr("class", "node")
      .attr("r", 10);

  node.append("text")
      .attr("dx", 12)
      .attr("dy", ".35em")
      .text(function(d) { return d.name})
  
   force.on("tick", tick);

   function tick() {
      node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
      link.attr("x1", function(d) { return d.source.x; })
          .attr("y1", function(d) { return d.source.y; })
          .attr("x2", function(d) { return d.target.x; })
          .attr("y2", function(d) { return d.target.y; });
    };
});
</script>

<% if @compare == "1" %>

  <table class="table table-striped table-bordered" id = "table_width" "table border="0" cellpadding="0" cellspacing="0">
        <thead>
          <td width = "300"><b><center>MVCWalker</center></b></td>
          <td width = "300"><b><center>Affin</center></b></td>	
        </thead>
        <tbody>					
        
        </tbody>
  </table>

<% elsif @compare == "2"%>

  <table class="table table-striped table-bordered" id = "table_width" "table border="0" cellpadding="0" cellspacing="0">
        <thead>
          <td width = "300"><b><center>MVCWalker</center></b></td>
          <td width = "300"><b><center>CORALS</center></b></td>	
        </thead>
        <tbody>					
        
        </tbody>
  </table>


<% elsif @compare == "3"%>

  <table class="table table-striped table-bordered" id = "table_width" "table border="0" cellpadding="0" cellspacing="0">
        <thead>
          <td width = "300"><b><center>Affin</center></b></td>
          <td width = "300"><b><center>CORALS</center></b></td>	
        </thead>
        <tbody>					
        <% for index in (0 ... 5).step(1)  %>
          <tr>
            <% if @affins[index] != nil %>
            <td>
              <%= link_to image_tag('edit.png', size:'16x10', title: 'Edit '+@affins[index].pesquisador2.nome+' informations'), {:controller => 'home', :action => 'edit', :researcher_id => @affins[index].pesquisador2.id} %>&nbsp;<%= @affins[index].pesquisador2.nome %><br>
              Institution: <% for cont in (0 ... @rec_ids.length).step(1)%>
                             <% if @rec_ids[cont] == @affins[index].pesquisador2.id %>
                               <%= @instituicoes[cont].acronimo %>
                             <% end %>
                           <% end %><br>
              Research area(s):<br>
              <% for cont in (0 ... @rec_ids.length).step(1) %>   
                <% if @associacoes[cont] != [] %>
                  <% for count2 in (0 ... 3) %>
                      <% if @associacoes[cont][count2] != nil and @associacoes[cont][count2].pesquisador_id == @affins[index].pesquisador2.id %>
                        <% for area in @rec_areas %>
                          <% if @associacoes[cont][count2].area_id == area.id %>
                           &bull; <%= area.nome %><br>                        
                          <% end %>
                        <% end %>
                      <% end %>
                  <% end %>
                <% end %>
              <% end %>
            </td>
            <% end %>
            <% if @corals[index] != nil %>
            <td>
 
             <%= link_to image_tag('edit.png', size:'16x10', title: 'Edit '+@affins[index].pesquisador2.nome+' informations'), {:controller => 'home', :action => 'edit', :researcher_id => @corals[index].pesquisador2.id} %>&nbsp;<%= @corals[index].pesquisador2.nome %><br>
             Institution: <% for cont in (0 ... @rec_ids.length).step(1)%>
                            <% if @rec_ids[cont] == @corals[index].pesquisador2.id %>
                              <%= @instituicoes[cont].acronimo %>
                            <% end %>
                          <% end %><br>
              <% for cont in (0 ... @rec_ids.length).step(1) %>   
                <% if @associacoes[cont] != [] %>
                  <% for count2 in (0 ... 3) %>
                      <% if @associacoes[cont][count2] != nil and @associacoes[cont][count2].pesquisador_id == @corals[index].pesquisador2.id %>
                        <% for area in @rec_areas %>
                          <% if @associacoes[cont][count2].area_id == area.id %>
                           &bull; <%= area.nome %><br>
                          <% end %>
                        <% end %>
                      <% end %>
                  <% end %>
                <% end %>
              <% end %>  
            </td>
            <% end %>
          </tr>
        <% end %>
        </tbody>
  </table>

<% end %>

<% end %>
